import pygame
import os.path
pygame.init()

width = 1000
height = 500
win = pygame.display.set_mode((int(width), int(height)))
CIRCLE_X_AXIS = width / 2
CIRCLE_Y_AXIS = (height / 2) + 50
velocity = 10



# Movement
after_jump_movement = [None] * 7
for picIndex in range(1, 7):
    after_jump_movement[picIndex - 1] = pygame.image.load(os.path.join("./../HERO_MOVEMENT/" + "J" + str(picIndex) + ".png"))
    picIndex += 1

left_movement = [None] * 10
for picIndex in range(1, 10):
    left_movement[picIndex - 1] = pygame.image.load(os.path.join("./../HERO_MOVEMENT/" + "L" + str(picIndex) + ".png"))
    picIndex += 1

right_movement = [None] * 10
for picIndex in range(1, 10):
    right_movement[picIndex - 1] = pygame.image.load(os.path.join("./../HERO_MOVEMENT/" + "R" + str(picIndex) + ".png"))
    picIndex += 1

jump = False
after_jump = False
press_left_arrow = False
press_right_arrow = False
Push = True
jump_vel = 10
step_index = 0
walking_index = 0

def draw_game():
    global step_index
    global after_jump
    global walking_index
    global press_left_arrow
    global press_right_arrow
    global Push
    win.fill((0, 0, 0))
    if step_index >= 6:
        step_index = 0

    if walking_index >= 9:
        walking_index = 0

    if after_jump:
        win.blit(after_jump_movement[step_index], (CIRCLE_X_AXIS, CIRCLE_Y_AXIS))
        step_index += 1
        pygame.time.delay(150)
        Push = False
        if step_index >= 6:
            after_jump = False
            Push = True
    elif press_left_arrow:
        win.blit(left_movement[walking_index], (CIRCLE_X_AXIS, CIRCLE_Y_AXIS))
        walking_index += 1
        press_left_arrow = False
    elif press_right_arrow:
        win.blit(right_movement[walking_index], (CIRCLE_X_AXIS, CIRCLE_Y_AXIS))
        walking_index += 1
        press_right_arrow = False
    else:
        win.blit(pygame.image.load(os.path.join("./../HERO_MOVEMENT/standing.png")), (CIRCLE_X_AXIS, CIRCLE_Y_AXIS))

i = 0
run = True
while run:

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False


    draw_game()

    userInput = pygame.key.get_pressed()

    if userInput[pygame.K_SPACE]:
        jump = True

    elif (userInput[pygame.K_LEFT] or userInput[pygame.K_a]) and CIRCLE_X_AXIS > 0 and Push:
        CIRCLE_X_AXIS -= velocity
        press_left_arrow = True

    elif (userInput[pygame.K_RIGHT] or userInput[pygame.K_d]) and CIRCLE_X_AXIS < width - 50 and Push:
        CIRCLE_X_AXIS += velocity
        press_right_arrow = True
    else:
        pass

    if jump:
        CIRCLE_Y_AXIS -= jump_vel
        jump_vel -= 1
        print("print:", jump_vel, ", Circle Y axis:",CIRCLE_Y_AXIS)
        pygame.time.delay(20)
        if jump_vel < -10:
            jump = False
            after_jump = True
            jump_vel = 10

    pygame.time.delay(40)
    pygame.display.update()
